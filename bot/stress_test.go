package bot_test

import (
	"fmt"
	"sync"
	"telegram-shopping-bot/bot"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestStressAddLargeNumberOfItems(t *testing.T) {
	b := bot.NewShoppingBot()
	b.StartNewList(12345)

	// –î–æ–±–∞–≤–ª—è–µ–º 10,000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
	for i := 0; i < 10000; i++ {
		b.AddToList(12345, []string{fmt.Sprintf("Item %d", i+1)})
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ GetList
	list := b.GetList(12345)
	assert.Contains(t, list, "1. Item 1")
	assert.Contains(t, list, "10000. Item 10000")
}

func TestStressDeleteLargeNumberOfItems(t *testing.T) {
	b := bot.NewShoppingBot()
	b.StartNewList(12345)

	// –î–æ–±–∞–≤–ª—è–µ–º 10,000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
	for i := 0; i < 10000; i++ {
		b.AddToList(12345, []string{fmt.Sprintf("Item %d", i+1)})
	}

	// –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
	for i := 10000; i > 0; i-- {
		_, err := b.DeleteItem(12345, 1)
		assert.NoError(t, err)
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç
	assert.Equal(t, "<b>üìã –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç.</b>", b.GetList(12345))
}

func TestStressConcurrentAccess(t *testing.T) {
	b := bot.NewShoppingBot()
	b.StartNewList(12345)

	var wg sync.WaitGroup
	for i := 0; i < 1000; i++ {
		wg.Add(1)
		go func(index int) {
			defer wg.Done()
			b.AddToList(12345, []string{fmt.Sprintf("Item %d", index+1)})
		}(i)

		wg.Add(1)
		go func() {
			defer wg.Done()
			b.DeleteItem(12345, 1)
		}()
	}

	wg.Wait()
	assert.Contains(t, b.GetList(12345), "<b>üìã –í–∞—à —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>")
}
