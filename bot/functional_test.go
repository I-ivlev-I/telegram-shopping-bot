package bot_test

import (
	"telegram-shopping-bot/bot"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestStartNewList(t *testing.T) {
	b := bot.NewShoppingBot()

	// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞
	response := b.StartNewList(12345)
	assert.Equal(t, "<b>üÜï –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –Ω–∞—á–∞—Ç.</b> –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—É–Ω–∫—Ç–∞–º–∏ —Å–ø–∏—Å–∫–∞!", response)
}

func TestAddToList(t *testing.T) {
	b := bot.NewShoppingBot()
	b.StartNewList(12345)

	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
	response := b.AddToList(12345, []string{"–ú–æ–ª–æ–∫–æ", "–•–ª–µ–±"})
	assert.Equal(t, "<b>‚úÖ –ü—É–Ω–∫—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫.</b>", response)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ GetList (—Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—ã–≤–æ–¥–æ–º)
	expected := "<b>üìã –í–∞—à —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>\n1. –ú–æ–ª–æ–∫–æ\n2. –•–ª–µ–±\n"
	actual := b.GetList(12345)
	assert.Equal(t, expected, actual, "–°–ø–∏—Å–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω")
}

func TestDeleteItem(t *testing.T) {
	b := bot.NewShoppingBot()
	b.StartNewList(12345)
	b.AddToList(12345, []string{"–ú–æ–ª–æ–∫–æ", "–•–ª–µ–±"})

	// –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç
	response, err := b.DeleteItem(12345, 2) // –£–¥–∞–ª—è–µ–º "–•–ª–µ–±"
	assert.NoError(t, err)
	assert.Equal(t, "<b>‚úÖ –ü—É–Ω–∫—Ç —É–¥–∞–ª—ë–Ω.</b>", response)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
	expected := "<b>üìã –í–∞—à —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>\n1. –ú–æ–ª–æ–∫–æ\n"
	actual := b.GetList(12345)
	assert.Equal(t, expected, actual, "–°–ø–∏—Å–æ–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ '–ú–æ–ª–æ–∫–æ'")
}

func TestStrikeThrough(t *testing.T) {
	b := bot.NewShoppingBot()
	chatID := int64(12345)

	b.StartNewList(chatID)
	b.AddToList(chatID, []string{"–ú–æ–ª–æ–∫–æ", "–•–ª–µ–±", "–Ø–±–ª–æ–∫–∏"})

	// –í—ã—á–µ—Ä–∫–∏–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç (–•–ª–µ–±)
	resp, err := b.StrikeThrough(chatID, 2)
	assert.NoError(t, err)
	assert.Equal(t, "<b>‚úÖ –ü—É–Ω–∫—Ç –≤—ã—á–µ—Ä–∫–Ω—É—Ç.</b>", resp)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫
	list := b.GetList(chatID)
	// –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø—É–Ω–∫—Ç 2 –±—É–¥–µ—Ç "<s>–•–ª–µ–±</s>"
	expected := "<b>üìã –í–∞—à —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>\n1. –ú–æ–ª–æ–∫–æ\n2. <s>–•–ª–µ–±</s>\n3. –Ø–±–ª–æ–∫–∏\n"
	assert.Equal(t, expected, list, "–î–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å –∑–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π —ç–ª–µ–º–µ–Ω—Ç")
}